name: build

on:
  push:
    branches: '*'
    tags: 'v*.*'
  pull_request:

jobs:
  build-posix:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - { name: linux-x64,  os: ubuntu-latest }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Build
        uses: ./.github/actions/cmake-build
        with:
          run-tests: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cskburn-${{ matrix.name }}
          path: build/cskburn/cskburn
          if-no-files-found: error

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/actions/release-tar-xz
        with:
          name: cskburn-${{ matrix.name }}.tar.xz
          root-dir: build/cskburn
          files: cskburn
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-darwin:
    runs-on: macos-latest

    strategy:
      matrix:
        include:
          - { name: darwin-x64,   target: x86_64-apple-macos, test: true  }
          - { name: darwin-arm64, target: arm64-apple-macos,  test: false }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Build
        uses: ./.github/actions/cmake-build
        with:
          run-tests: ${{ matrix.test }}
        env:
          CFLAGS: -target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cskburn-${{ matrix.name }}
          path: build/cskburn/cskburn
          if-no-files-found: error

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/actions/release-tar-xz
        with:
          name: cskburn-${{ matrix.name }}.tar.xz
          root-dir: build/cskburn
          files: cskburn
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-win32:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - { name: win32-x64, os: windows-latest }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup MinGW-w64
        id: setup-mingw64
        uses: ./.github/actions/setup-mingw64
        with:
          install: >-
            git
            zip
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja

      - name: Build
        uses: ./.github/actions/cmake-build
        with:
          run-tests: true
          shell: ${{ steps.setup-mingw64.outputs.shell }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cskburn-${{ matrix.name }}
          path: build/cskburn/cskburn.exe
          if-no-files-found: error

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/actions/release-zip
        with:
          shell: ${{ steps.setup-mingw64.outputs.shell }}
          name: cskburn-${{ matrix.name }}.zip
          root-dir: build/cskburn
          files: cskburn.exe
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { name: linux-arm,        arch: armv7,    distro: buster        }
          - { name: linux-arm64,      arch: aarch64,  distro: buster        }
          - { name: linux-arm-musl,   arch: armv7,    distro: alpine_latest }
          - { name: linux-arm64-musl, arch: aarch64,  distro: alpine_latest }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          install: |
            case "${{ matrix.distro }}" in
              buster)
                apt-get update -q -y
                apt-get install -q -y git build-essential cmake ninja-build
                ;;
              alpine_latest*)
                apk update
                apk add git cmake make ninja g++ libtool musl-dev linux-headers
                ;;
            esac
          run: |
            git config --global --add safe.directory $PWD
            cmake -G Ninja -B build
            cmake --build build --config Release
            ctest --test-dir build --build-config Release --output-on-failure

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cskburn-${{ matrix.name }}
          path: build/cskburn/cskburn
          if-no-files-found: error

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/actions/release-tar-xz
        with:
          name: cskburn-${{ matrix.name }}.tar.xz
          root-dir: build/cskburn
          files: cskburn
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { name: android-armeabi-v7a,  abi: armeabi-v7a  }
          - { name: android-arm64-v8a,    abi: arm64-v8a    }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Setup NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e

      - name: Build
        uses: ./.github/actions/cmake-build
        with:
          build-args: >-
            -DCMAKE_SYSTEM_NAME=Android
            -DCMAKE_ANDROID_ARCH_ABI=${{ matrix.abi }}
            -DCMAKE_ANDROID_NDK=${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cskburn-android-${{ matrix.abi }}
          path: build/cskburn/cskburn
          if-no-files-found: error

      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/actions/release-tar-xz
        with:
          name: cskburn-${{ matrix.name }}.tar.xz
          root-dir: build/cskburn
          files: cskburn
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
